name: ubuntu

on:
  push:
    branches:
      - master
      - 'release/**'
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/ubuntu.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'

env:
  CORES: 2
  BUILD_MODE: normal
  GPG_VERSION: stable
  USE_STATIC_DEPENDENCIES: yes

jobs:
  tests:
    strategy:
      matrix:
        env:
          - CC: gcc
            CXX: g++
          - CC: clang
            CXX: clang++
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: ubuntu ${{ matrix.env.CC }}, ${{ matrix.env.CXX }}
    env: ${{ matrix.env }}    
    timeout-minutes: 50
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup environment
        run: |
          . ci/gha/setup-env.inc.sh
          ci/install_noncacheable_dependencies.sh
      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ github.workflow }}-${{ runner.os }}-${{ env.BUILD_MODE }}-${{ matrix.env.CC }}-gpg-${{ env.GPG_VERSION }}-${{ hashFiles('ci/**') }}-${{ hashFiles('.github/workflows/**') }}
      - name: Build cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -x
          ci/install_cacheable_dependencies.sh
      - name: tests
        run: |
          set -x
          ci/run.sh
      - name: Package
        run: |
          set -x
          cd ${LOCAL_BUILDS}/rnp-build
          cpack -G DEB -D CPACK_DEBIAN_PACKAGE_SHLIBDEPS_PRIVATE_DIRS="${BOTAN_INSTALL}/lib;${JSONC_INSTALL}/lib;${GPG_INSTALL}/lib"
  cmake-offline-googletest-src:
    strategy:
      matrix:
        env:
          - CC: gcc
            CXX: g++
            GTEST_SOURCES: /usr/src/googletest
            RNP_TESTS: rnp_tests
# We think do not need it but it is here if we start thinking that we need it
#          - CC: clang
#            CXX: clang++  
#            GTEST_SOURCES: /usr/src/googletest
#            RNP_TESTS: rnp_tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env: ${{ matrix.env }}    
    timeout-minutes: 50
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup environment
        run: |
          . ci/gha/setup-env.inc.sh
          ci/install_noncacheable_dependencies.sh
          sudo apt-get -y install googletest
      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-${{ env.BUILD_MODE }}-gpg-${{ env.GPG_VERSION }}-${{ hashFiles('ci/**') }}-${{ hashFiles('.github/workflows/**') }}
      - name: Build cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -x
          ci/install_cacheable_dependencies.sh
      - name: tests
        run: |
          set -x
          ci/run.sh
          [ -d "${LOCAL_BUILDS}/rnp-build/src/tests" ]
          [ -d "${LOCAL_BUILDS}/rnp-build/src/tests/googletest-build" ]
          [ ! -d "${LOCAL_BUILDS}/rnp-build/src/tests/googletest-src" ]          
  cmake-offline-googletest:
    strategy:
      matrix:
        env:
          - CC: gcc
            CXX: g++
            DOWNLOAD_GTEST: Off
            RNP_TESTS: rnp_tests
# We think do not need it but it is here if we start thinking that we need it
#          - CC: clang
#            CXX: clang++  
#            DOWNLOAD_GTEST: Off
#            RNP_TESTS: rnp_tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env: ${{ matrix.env }}    
    timeout-minutes: 50
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup environment
        run: |
          . ci/gha/setup-env.inc.sh
          ci/install_noncacheable_dependencies.sh
          sudo apt-get -y install googletest
      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.CACHE_DIR }}
          key: ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-${{ env.BUILD_MODE }}-gpg-${{ env.GPG_VERSION }}-${{ hashFiles('ci/**') }}-${{ hashFiles('.github/workflows/**') }}
      - name: Build cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -x
          ci/install_cacheable_dependencies.sh
      - name: Build googletest
        run: |
          set -x
          mkdir -p "${LOCAL_BUILDS}/googletest-build"
          pushd "${LOCAL_BUILDS}/googletest-build"
          cmake /usr/src/googletest
          sudo make -j2 install
          popd
      - name: tests
        run: |
          set -x
          ci/run.sh
          [ -d "${LOCAL_BUILDS}/rnp-build/src/tests" ]
          [ ! -d "${LOCAL_BUILDS}/rnp-build/src/tests/googletest-build" ]
          [ ! -d "${LOCAL_BUILDS}/rnp-build/src/tests/googletest-src" ]          
  cmake-disable-rubyrnp:
    strategy:
      matrix:
        env:
          - CC: gcc
            CXX: g++
            DOWNLOAD_RUBYRNP: Off
            RNP_TESTS: rnp_tests.hash_test_success
# We think do not need it but it is here if we start thinking that we need it
#          - CC: clang
#            CXX: clang++  
#            DOWNLOAD_RUBYRNP: Off
#            RNP_TESTS: rnp_tests.hash_test_success
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env: ${{ matrix.env }}    
    timeout-minutes: 50
    steps:
       - uses: actions/checkout@v2
         with:
           fetch-depth: 1
       - name: Setup environment
         run: |
           . ci/gha/setup-env.inc.sh
           ci/install_noncacheable_dependencies.sh
       - name: Cache
         id: cache
         uses: actions/cache@v2
         with:
           path: ${{ env.CACHE_DIR }}
           key: ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-${{ env.BUILD_MODE }}-gpg-${{ env.GPG_VERSION }}-${{ hashFiles('ci/**') }}-${{ hashFiles('.github/workflows/**') }}
       - name: Build cache
         if: steps.cache.outputs.cache-hit != 'true'
         run: |
           set -x
           ci/install_cacheable_dependencies.sh
       - name: tests
         run: |
           set -x
           ci/run.sh
           ls -la "${RNP_INSTALL}/lib/"librnp*.so
           ! ctest -N | grep 'ruby' > /dev/null
           ! ls -la src/tests/ | grep 'ruby' > /dev/null
  version-cmake-up-to-date:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: rnp
      - name: Download latest version.cmake
        uses: actions/checkout@v2
        with:
          repository: rnpgp/cmake-versioning
          fetch-depth: 1
          path: cmake-versioning
      - name: Compare
        run: |
          set -x
          diff "rnp/cmake/version.cmake" "cmake-versioning/version.cmake"
