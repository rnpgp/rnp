name: windows-msys2

on:
  push:
    branches:
      - master
      - 'release/**'
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/windows.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'

env:
  BUILD_MODE: normal
  GPG_VERSION: stable
  CORES: 2

jobs:
  tests:
    name: ${{ matrix.os }} msys2 [CC ${{ matrix.env.CC }}; GnuPG stable]
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 70
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        env:
          - CC: gcc
            CXX: g++
            GTEST_SOURCES: /home/runneradmin/googletest-download/googletest-src
          - CC: clang
            CXX: clang++
            GTEST_SOURCES: /home/runneradmin/googletest-download/googletest-src
    env:  ${{ matrix.env }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
      - name: install
        shell: msys2 {0}
        run: |
          bash ci/install_noncacheable_dependencies.sh
          bash ci/install_cacheable_dependencies.sh
      - name: download googletest
        # This is workaround for the CMake or MSYS issue, failing to correctly checkout external project
        #  Failed to get the hash for HEAD:
        #  fatal: ambiguous argument 'HEAD^commit': unknown revision or path not in the working tree.
        shell: msys2 {0}
        run: |
          set -euxo pipefail
          mkdir ${HOME}/googletest-download
          pushd ${HOME}/googletest-download
          git clone --no-checkout "https://github.com/google/googletest.git" "googletest-src"
          cd googletest-src
          git checkout c43f710 --
          popd
      - name: tests
        shell: msys2 {0}
        run: bash ci/main.sh
      - shell: msys2 {0}
        run: |
          set -euxo pipefail
          wget https://github.com/lucasg/Dependencies/releases/download/v1.10/Dependencies_x64_Release.zip
          7z x Dependencies_x64_Release.zip
          ./Dependencies -exports $HOME/local-installs/rnp-install/bin/librnp*.dll > exports
          grep -qv dst_close exports
          grep -qw rnp_version_string exports
