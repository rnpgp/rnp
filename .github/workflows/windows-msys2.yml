name: windows-msys2

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - 'release/**'
    paths-ignore:
      - '/*.sh'
      - '/.*'
      - '/_*'
      - 'Brewfile'
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - 'flake.lock'
      - '.github/workflows/*.yml'
      - '!.github/workflows/windows-msys2.yml'
  pull_request:
    paths-ignore:
      - '/*.sh'
      - '/.*'
      - '/_*'
      - 'Brewfile'
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - 'flake.lock'

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  BUILD_MODE: normal
  GPG_VERSION: stable
  GTEST_SOURCES: googletest-src
  CORES: 2

jobs:
  tests:
    name: ${{ matrix.os }} msys2 [CC ${{ matrix.env.CC }}; GnuPG stable]
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 70
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        env:
          - CC: gcc
            CXX: g++
            RNP_INSTALL: /home/runneradmin/rnp-install
          - CC: clang
            CXX: clang++
            RNP_INSTALL: /home/runneradmin/rnp-install
    env:  ${{ matrix.env }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true
      - uses: msys2/setup-msys2@v2
        with:
          path-type: minimal
          update: true
      - name: Setup environment
        shell: msys2 {0}
#  setup-env script below cannot correctly process msys2 environment since it is a mix of Windows and Linux
#  Environment setup is required only if some dependencies shall be built locally
#  If it becomes a case for mingw environment setup shall be reconsidered
#          . ci/gha/setup-env.inc.sh
        run: |
          bash ci/install_noncacheable_dependencies.sh
# Since all dependencies are available as binary packages no extra steps or cache are required
# The code below kept here for potential need to build some dependencies locally
#      - name: Cache
#        id: cache
#        uses: actions/cache@v3
#        with:
#          path: ${{ env.CACHE_DIR }}
#          key: ${{ github.workflow }}-${{ runner.os }}-${{ env.BUILD_MODE }}-${{ matrix.env.CC }}-gpg-${{ env.GPG_VERSION }}-${{ hashFiles('ci/**') }}-${{ hashFiles('.github/workflows/**') }}
#      - name: Build cache
#        if: steps.cache.outputs.cache-hit != 'true'
#        shell: msys2 {0}
#        env:
#          USE_STATIC_DEPENDENCIES: "yes"
#        run: |
#          set -x
#          ci/install_cacheable_dependencies.sh
      - name: download googletest
        uses: actions/checkout@v3
        with:
          repository: google/googletest
          path: ${{ env.GTEST_SOURCES }}
          fetch-depth: 0
          ref: release-1.11.0
        # This is workaround for the CMake or MSYS issue, failing to correctly checkout external project
        #  Failed to get the hash for HEAD:
        #  fatal: ambiguous argument 'HEAD^commit': unknown revision or path not in the working tree.
      - name: tests
        shell: msys2 {0}
        run: ci/main.sh
      - shell: msys2 {0}
        run: |
          set -euxo pipefail
          wget https://github.com/lucasg/Dependencies/releases/download/v1.10/Dependencies_x64_Release.zip
          7z x Dependencies_x64_Release.zip
          ./Dependencies -exports "${RNP_INSTALL}"/bin/librnp*.dll > exports
          grep -qv dst_close exports
          grep -qw rnp_version_string exports
