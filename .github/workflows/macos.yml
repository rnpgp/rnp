name: macos

on:
  push:
    branches:
      - master
      - 'release/**'
    paths-ignore:
      - '/*.sh'
      - '/.*'
      - '/_*'
      - '/vcpkg.txt'
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - 'flake.lock'
      - '.github/workflows/*.yml'
      - '!.github/workflows/macos.yml'
  pull_request:
    paths-ignore:
      - '/*.sh'
      - '/.*'
      - '/_*'
      - '/vcpkg.txt'
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - 'flake.lock'

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  CORES: 2
  BUILD_MODE: normal
  GPG_VERSION: stable
  USE_STATIC_DEPENDENCIES: yes

jobs:
  tests:
    name: ${{ matrix.os }} [CC ${{ matrix.env.CC }}; GnuPG stable]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
        env:
          - CC: gcc
            CXX: g++
          - CC: clang
            CXX: clang++
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env: ${{ matrix.env }}
    timeout-minutes: 250
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup environment
        run: |
          . ci/gha/setup-env.inc.sh
          ci/install_noncacheable_dependencies.sh
      - name: Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ github.workflow }}-${{ matrix.os }}-${{ env.BUILD_MODE }}-${{ matrix.env.CC }}-gpg-${{ env.GPG_VERSION }}-${{ hashFiles('ci/**') }}-${{ hashFiles('.github/workflows/**') }}
      - name: Build cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -x
          ci/install_cacheable_dependencies.sh
      - name: tests
        run: |
          ci/run.sh
      - name: symbol-visibility
        run: |
          set -euxo pipefail
          nm --extern-only --defined-only --demangle $RNP_INSTALL/lib/librnp.dylib > exports
          [ $(grep -c dst_close exports) == "0" ]
          [ $(grep -c Botan exports) == "0" ]
          [ $(grep -c _rnp_version_string_full exports) == "1" ]
