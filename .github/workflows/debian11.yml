name: debian11

on:
  push:
    branches:
      - master
      - 'release/**'
    paths-ignore:
      - '/*.sh'
      - '/.*'
      - '/_*'
      - '/vcpkg.txt'
      - 'Brewfile'
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - 'flake.lock'
      - '.github/workflows/*.yml'
      - '!.github/workflows/debian11.yml'
  pull_request:
    paths-ignore:
      - '/*.sh'
      - '/.*'
      - '/_*'
      - '/vcpkg.txt'
      - 'Brewfile'
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - 'flake.lock'

env:
  CORES: 2
  LANG: C.UTF-8
  LC_ALL: C.UTF-8
  LC_LANG: C.UTF-8
  DOWNLOAD_RUBYRNP: Off
  BUILD_MODE: normal
  GPG_VERSION: stable
  SUDO: ""
  USE_STATIC_DEPENDENCIES: yes
  RNP_LOG_CONSOLE: 1

jobs:
  tests:
    name: ${{ matrix.env.IMAGE }} [CC ${{ matrix.env.CC }}; GnuPG stable]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    container:
      image: ${{ matrix.env.IMAGE }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        env:
          - CC: gcc
            CXX: g++
            CPU: i386
            IMAGE: "i386/debian:11"
          - CC: clang
            CXX: clang++
            CPU: i386
            IMAGE: "i386/debian:11"
    env: ${{ matrix.env }}
    steps:
      - name: Install prerequisites
        run: |
          apt update
          apt -y install git sudo

# I386: actions/checkout@V2,  actions/cache@V2 actions/cache@V2
#       give error about OCI container [https://github.com/actions/checkout/issues/334]
#                                      [https://github.com/actions/runner/issues/1011]
      - name: Check out repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 10

      - name: Setup noncacheable dependencies
        run: |
          . ci/gha/setup-env.inc.sh
          ci/install_noncacheable_dependencies.sh
        shell: bash

#      - name: Cache
#        id: cache
#        uses: actions/cache@v2
#        with:
#          path: ${{github.workspace}}/${{ env.CACHE_DIR }}
#          key: ${{runner.os}}-${{ matrix.env.CPU }}-${{ matrix.env.IMAGE }}-v1

      - name: Setup cacheable dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -euxo pipefail
          ci/install_cacheable_dependencies.sh
        shell: bash

      - name: Add rnpuser
        # it's only needed for rnpkeys_generatekey_verifykeyHomeDirNoPermission test
        run: |
           useradd rnpuser
           printf "\nrnpuser\tALL=(ALL)\tNOPASSWD:\tALL" > /etc/sudoers.d/rnpuser
           printf "\nrnpuser\tsoft\tnproc\tunlimited\n" > /etc/security/limits.d/30-rnpuser.conf
           echo "SUDO=sudo" >> $GITHUB_ENV

      - name: Build and Test
        run: |
          set -x
          chown -R rnpuser:rnpuser $PWD
          exec su rnpuser -c ci/run.sh
        shell: bash

      - name: Package
        run: |
          set -x
          cd ${LOCAL_BUILDS}/rnp-build
          cpack -G DEB -D CPACK_DEBIAN_PACKAGE_SHLIBDEPS_PRIVATE_DIRS="${BOTAN_INSTALL}/lib;${JSONC_INSTALL}/lib;${GPG_INSTALL}/lib"
